#!/usr/bin/python
# -*- coding: utf-8 -*-
import telebot
import sys
import redis as r
import os
import time
import random
from tempmail import TempMail
import urllib2
import urllib
import requests
import requests as req
import json
from telebot import types
from time import sleep
reload(sys)
sys.setdefaultencoding("utf-8")
redis = r.StrictRedis(host='localhost', port=6379, db=0)
black = '40914585'
TOKEN = '222307305:AAGfDpUaG7yZ30DZ0-7kZo_qkRex-b_kVJI'
bot = telebot.TeleBot(TOKEN)
book = '-1001133103944'
cid = '-1001119191346'
admin = '40914585'
eng = '52598408'
ch = '-1001082987259'
rava = '-1001055561290'
memari = '-1001084806067'
honar = '-1001109722953'
omran = '-1001111339427'
mavad = '-1001089855800'
mazhabi = '-1001137201872'
amozesh = '-1001120639383'
zaban = '-1001128688812'
kesha = '-1001070263633'
omo = '@Booknaab_General1'
ada = '@Booknaab_Literature'
ol = '@Booknaab_Politicalscience'
all = '@Booknaab_General1, Booknaab_Literature'
botid = bot.get_me().id
reqa = urllib2.Request('http://irapi.ir/time/')
openera = urllib2.build_opener()
fa = openera.open(reqa)
parsed_jsona = json.loads(fa.read())
time = parsed_jsona['ENtime']
date = parsed_jsona['FAdate']
prefix = 't'
sudo = [52598408, 48823428, 184862162, 40914585]

def is_sudo(user_id):
    var = False
    if int(user_id) in sudo:
        var = True
    return var

def is_mod(chat_id, user_id):
    var = False
    if bot.get_chat_member(chat_id, user_id).status in ["creator", "administrator"]:
        var = True
    return var

markuple = types.InlineKeyboardMarkup()
markuple.add(types.InlineKeyboardButton('خارج کردن ربات',callback_data='leave'))

markupin = types.InlineKeyboardMarkup()
markupin.add(types.InlineKeyboardButton('بوکناب عمومی', url='https://www.instagram.com/booknaab_general1/'),types.InlineKeyboardButton('بوکناب روانشناسی', url='https://www.instagram.com/booknaab_psychologist/'))
markupin.add(types.InlineKeyboardButton('بوکناب زبان', url='https://www.instagram.com/booknaab_Languages/'),types.InlineKeyboardButton('بوکناب کشاورزی', url='https://www.instagram.com/booknaab_agriculture/'))
markupin.add(types.InlineKeyboardButton('بوکناب معماری', url='https://www.instagram.com/booknaab_architecture/'),types.InlineKeyboardButton('بوکناب هنر', url='https://www.instagram.com/booknaab_art/'))
markupin.add(types.InlineKeyboardButton('بوکناب عمران', url='https://www.instagram.com/booknaab.civil/'),types.InlineKeyboardButton('بوکناب متالوژی و مواد', url='https://www.instagram.com/booknaab_materials/'))
markupin.add(types.InlineKeyboardButton('بوکناب مذهبی', url='https://www.instagram.com/booknaab_religious/'),types.InlineKeyboardButton('بوکناب آموزشی', url='https://www.instagram.com/booknaab_educational/'))

markupch = types.InlineKeyboardMarkup()
markupch.add(types.InlineKeyboardButton('بوکناب عمومی', url='t.me/Booknaab_General1'),types.InlineKeyboardButton('بوکناب روانشناسی', url='t.me/Booknaab_Psychology'))
markupch.add(types.InlineKeyboardButton('بوکناب معماری', url='t.me/Booknaab_Architecture'),types.InlineKeyboardButton('بوکناب هنر', url='t.me/BookNaab_Art'))
markupch.add(types.InlineKeyboardButton('بوکناب عمران', url='t.me/Booknaab_Civil'),types.InlineKeyboardButton('بوکناب متالوژی و مواد', url='t.me/Booknaab_Materials'))
markupch.add(types.InlineKeyboardButton('بوکناب مذهبی', url='t.me/BookNaab_Religious'),types.InlineKeyboardButton('بوکناب آموزشی', url='t.me/BookNaab_Educational'))
markupch.add(types.InlineKeyboardButton('بوکناب زبان', url='t.me/booknaab_languages'),types.InlineKeyboardButton('بوکناب کشاورزی', url='t.me/booknaab_agriculture'))
markupch.add(types.InlineKeyboardButton('بوکناب ادبیات', url='https://t.me/Booknaab_Literature'),types.InlineKeyboardButton('بوکناب علوم سیاسی', url='https://t.me/Booknaab_Politicalscience'))

markupget = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupget.add(types.KeyboardButton('کتاب معماری'),types.KeyboardButton('کتاب روانشناسی'))
markupget.add(types.KeyboardButton('کتاب هنر'),types.KeyboardButton('کتاب متالوژی و مواد'))
markupget.add(types.KeyboardButton('کتاب آموزشی'),types.KeyboardButton('کتاب مذهبی'))
markupget.add(types.KeyboardButton('کتاب زبان'),types.KeyboardButton('کتاب عمران'))
markupget.add(types.KeyboardButton('کتاب ادبیات'),types.KeyboardButton('کتاب علوم سیاسی'))
markupget.add(types.KeyboardButton('کتاب کشاورزی'),types.KeyboardButton('برگشت🔙'))

markupjoin = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupjoin.add(types.KeyboardButton('گروه های من🚩'))
markupjoin.add(types.KeyboardButton('روانشناسی'),types.KeyboardButton('معماری'))
markupjoin.add(types.KeyboardButton('هنر'),types.KeyboardButton('عمران'))
markupjoin.add(types.KeyboardButton('متالوژی و مواد'),types.KeyboardButton('مذهبی'))
markupjoin.add(types.KeyboardButton('آموزشی'),types.KeyboardButton('زبان'))
markupjoin.add(types.KeyboardButton('ادبیات'),types.KeyboardButton('علوم سیاسی'))
markupjoin.add(types.KeyboardButton('کشاورزی'),types.KeyboardButton('برگشت🔙'))

markupsend = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupsend.add(types.KeyboardButton('آمار'),types.KeyboardButton('ارسال به همه اعضا'))
markupsend.add(types.KeyboardButton('ارسال به همه کانال ها'))
markupsend.add(types.KeyboardButton('ارسال به کانال'),types.KeyboardButton('ارسال به گروه ها'))
markupsend.add(types.KeyboardButton('آمار گروه ها'))
markupsend.add(types.KeyboardButton('ارسال به گروه روانشناسی'))
markupsend.add(types.KeyboardButton('ارسال به گروه معماری'))
markupsend.add(types.KeyboardButton('ارسال به گروه هنر'))
markupsend.add(types.KeyboardButton('ارسال به گروه عمران'))
markupsend.add(types.KeyboardButton('ارسال به گروه متالوژی و مواد'))
markupsend.add(types.KeyboardButton('ارسال به گروه مذهبی'))
markupsend.add(types.KeyboardButton('ارسال به گروه آموزشی'))
markupsend.add(types.KeyboardButton('ارسال به گروه زبان'))
markupsend.add(types.KeyboardButton('ارسال به گروه کشاورزی'))
markupsend.add(types.KeyboardButton('ارسال به گروه ادبیات'))
markupsend.add(types.KeyboardButton('ارسال به گروه علوم سیاسی'))
markupsend.add(types.KeyboardButton('برگشت🔙'))

markupn = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupn.add(types.KeyboardButton('کانال عمومی'))
markupn.add(types.KeyboardButton('کانال معماری'),types.KeyboardButton('کانال هنر'))
markupn.add(types.KeyboardButton('کانال عمران'),types.KeyboardButton('کانال متالوژی'))
markupn.add(types.KeyboardButton('کانال مذهبی'),types.KeyboardButton('کانال آموزشی'))
markupn.add(types.KeyboardButton('کانال زبان'),types.KeyboardButton('کانال کشاورزی'))
markupn.add(types.KeyboardButton('کانال ادبیات'),types.KeyboardButton('کانال علوم سیاسی'))
markupn.add(types.KeyboardButton('کانال روانشناسی'),types.KeyboardButton('برگشت🔙'))

markupp = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupp.add(types.KeyboardButton('پنل'))

markupstart = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupstart.add(types.KeyboardButton('گروه های بوکناب👥'))
markupstart.add(types.KeyboardButton('اینستاگرام بوکناب📑'),types.KeyboardButton('کانال های بوکناب📣'))
markupstart.add(types.KeyboardButton('سفارش کتاب📚'))
markupstart.add(types.KeyboardButton('رسانه بوکناب📰'),types.KeyboardButton('نظرسنجی📊'))
markupstart.add(types.KeyboardButton('پشتیبانی📯'))
markupb = types.ReplyKeyboardMarkup(resize_keyboard=True)
markupb.add(types.KeyboardButton('برگشت🔙'))

markupi = types.InlineKeyboardMarkup()
markupi.add(types.InlineKeyboardButton('بسیار عالی', callback_data='1'))
markupi.add(types.InlineKeyboardButton('عالی', callback_data='2'))
markupi.add(types.InlineKeyboardButton('بد', callback_data='3'))
markupi.add(types.InlineKeyboardButton('بروزرسانی', callback_data='update'))

@bot.message_handler(commands=['send'])
def ssss(m):
    bot.send_message(all, 'Test')
    
@bot.message_handler(content_types=['new_chat_member'])
def hi(m):
    if m.new_chat_member.id == botid and m.chat.type == "supergroup" or m.chat.type == "group":
		redis.sadd('groups',m.chat.id)
		bot.send_message(m.chat.id, 'گروه با موفقیت به گروه های ربات اضافه شد',reply_markup=markuple)
    
@bot.message_handler(regexp='^reload')
def reload(m):
    msg = bot.send_message(m.chat.id, "reloaded\n@speedprojects", disable_notification=True, parse_mode="Markdown")
    python = sys.executable
    os.execl(python, python, *sys.argv)
    
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call): 
     mojodi = 'mojodi_{}_{}'.format(prefix,call.from_user.id)
     rmojodi = redis.get(mojodi)
     banlist = redis.sismember('banlist', '{}'.format(call.from_user.id))
     if str(banlist) == 'False':
      try:
        if call.data == "leave":
         if is_mod(chat_id=call.message.chat.id, user_id=call.from_user.id):
            bot.leave_chat(call.message.chat.id)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="ربات با موفقیت از گروه خارج شد")
         else:
           bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="فقط مدیر گروه میتونه")
        if call.data == "1":
          if int(rmojodi) > (int(2) - 1):
            getm = int(rmojodi) - int(2)
            redis.set(mojodi,str(getm))
            redis.sadd('full',call.from_user.id)
            redis.srem('uli',call.from_user.id)
            redis.srem('bad',call.from_user.id)
            full = str(redis.scard('full'))
            uli = str(redis.scard('uli'))
            bad = str(redis.scard('bad'))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="عنوان: میزان موفقیت بوکناب در معرفی کتابها\nبه نظر شما تیم بوکناب تا چه میزان در معرفی تخصصی کتابها موفق عمل کرده است ؟\n\nبسیار عالی: {}\nعالی : {}\nبد : {}".format(full,uli,bad),reply_markup=markupi)
          else:
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="دوست من شما فقط میتونی 2 بار نظر بدی🌷")
        if call.data == "2":
          if int(rmojodi) > (int(2) - 1):
            getm = int(rmojodi) - int(2)
            redis.set(mojodi,str(getm))
            redis.sadd('uli',call.from_user.id)
            redis.srem('full',call.from_user.id)
            redis.srem('bad',call.from_user.id)
            full = str(redis.scard('full'))
            uli = str(redis.scard('uli'))
            bad = str(redis.scard('bad'))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="عنوان: میزان موفقیت بوکناب در معرفی کتابها\nبه نظر شما تیم بوکناب تا چه میزان در معرفی تخصصی کتابها موفق عمل کرده است ؟\n\nبسیار عالی: {}\nعالی : {}\nبد : {}".format(full,uli,bad),reply_markup=markupi)
          else:
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="دوست من شما فقط میتونی 2 بار نظر بدی🌷")
        if call.data == "3":
          if int(rmojodi) > (int(2) - 1):
            getm = int(rmojodi) - int(2)
            redis.set(mojodi,str(getm))
            redis.sadd('bad',call.from_user.id)
            redis.srem('uli',call.from_user.id)
            redis.srem('full',call.from_user.id)
            full = str(redis.scard('full'))
            uli = str(redis.scard('uli'))
            bad = str(redis.scard('bad'))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="عنوان: میزان موفقیت بوکناب در معرفی کتابها\nبه نظر شما تیم بوکناب تا چه میزان در معرفی تخصصی کتابها موفق عمل کرده است ؟\n\nبسیار عالی: {}\nعالی : {}\nبد : {}".format(full,uli,bad),reply_markup=markupi)
          else:
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="دوست من شما فقط میتونی 2 بار نظر بدی🌷")
        if call.data == "update":
            full = str(redis.scard('full'))
            uli = str(redis.scard('uli'))
            bad = str(redis.scard('bad'))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="عنوان: میزان موفقیت بوکناب در معرفی کتابها\nبه نظر شما تیم بوکناب تا چه میزان در معرفی تخصصی کتابها موفق عمل کرده است ؟\n\nبسیار عالی: {}\nعالی : {}\nبد : {}".format(full,uli,bad),reply_markup=markupi)
      except:
          print('rid')
         
@bot.message_handler(commands=['add'])
def bl(m):
  mojodi = 'mojodi_{}_{}'.format(prefix,m.from_user.id)
  redis.set(mojodi,'4')
  bot.reply_to(m, 'ok')
  
@bot.message_handler(content_types=['text'])
def text(m):
    banlist = redis.sismember('bans', '{}'.format(m.from_user.id))
    if str(banlist) == 'False':
     try:
        if m.text == '/start':
         users = redis.sismember('nn', '{}'.format(m.from_user.id))
         if str(users) == 'False':
           redis.sadd('nn',m.from_user.id)
           redis.sadd('members',m.from_user.id)
           bot.reply_to(m, """
📚 به ربات بوکناب خوش آمدید

🔹برخی از امکانات تخصصی این ربات :

🔸عضویت اعضا در بخش های ویژه خود
🔸عضویت در کانال ها و صفحات اینستاگرام هر رشته
🔸امکان دریافت آخرین اخبار و اطلاعیه ها
🔸مشاهده لیست کتابهای معرفی شده در هر گروه
🔸سفارش راحت کتاب
🔸معرفی کتاب به بوکناب و ....

برای شروع لطفاً در یکی از گروه های بوکناب عضو شوید 🙏
""",reply_markup=markupstart)
           mojodi = 'mojodi_{}_{}'.format(prefix,m.from_user.id)
           redis.set(mojodi,'4')
         else:
           redis.sadd('members',m.from_user.id)
           bot.reply_to(m, """
📚 به ربات بوکناب خوش آمدید

🔹برخی از امکانات تخصصی این ربات :

🔸عضویت اعضا در بخش های ویژه خود
🔸عضویت در کانال ها و صفحات اینستاگرام هر رشته
🔸امکان دریافت آخرین اخبار و اطلاعیه ها
🔸مشاهده لیست کتابهای معرفی شده در هر گروه
🔸سفارش راحت کتاب
🔸معرفی کتاب به بوکناب و ....

برای شروع لطفاً در یکی از گروه های بوکناب عضو شوید 🙏
""",reply_markup=markupstart)
        elif m.text == 'ارسال به همه کانال ها':
            bot.reply_to(m, 'لطفا پیامتو ارسال کن')
            bot.register_next_step_handler(m, sendall)
        elif m.text == 'آمار گروه ها':
           rav = str(redis.scard('ravanshenasi'))
           mema = str(redis.scard('memari'))
           ho = str(redis.scard('honar'))
           om = str(redis.scard('omran'))
           mav = str(redis.scard('mavad'))
           maz = str(redis.scard('mazhabi'))
           amo = str(redis.scard('amozesh'))
           zaba = str(redis.scard('zaban'))
           kesh = str(redis.scard('kesha'))
           bot.reply_to(m, """
   آمار گروه های ربات

گروه معماری با {} عضو
گروه روانشناسی با {} عضو
گروه هنر با {} عضو
گروه عمران با {} عضو
گروه متالوژی و مواد با {} عضو
گروه مذهبی با {} عضو
گروه آموزشی با {} عضو
گروه زبان با {} عضو
گروه کشاورزی با {} عضو

""".format(mema,rav,ho,om,mav,maz,amo,zaba,kesh))
        elif m.text == 'رسانه بوکناب📰':
            bot.reply_to(m, """
به بخش رسانه خوش آمدید. در اینجا تیزرها و کلیپ های مرتبط با فعالیت های تیم بوکناب را میتوانید مشاهده کنید 👇

http://www.aparat.com/v/urP7Y

http://www.aparat.com/v/eC1Jq
""")
        elif m.text == 'کانال های بوکناب📣':
            bot.reply_to(m, 'کانال ها تیم بوکناب در تلگرام📣',reply_markup=markupch)
        elif m.text == 'نظرسنجی📊':
            full = str(redis.scard('full'))
            uli = str(redis.scard('uli'))
            bad = str(redis.scard('bad'))
            bot.reply_to(m, """
عنوان: میزان موفقیت بوکناب در معرفی کتابها

به نظر شما تیم بوکناب تا چه میزان در معرفی تخصصی کتابها موفق عمل کرده است ؟

بسیار عالی : {}
عالی : {}
بد : {}
""".format(full,uli,bad),reply_markup=markupi)
        elif m.text == 'سفارش کتاب📚':
            bot.reply_to(m, 'در چه زمینه ای میخواهید کتاب سفارش بدهید؟',reply_markup=markupget)
        elif m.text == 'برگشت🔙':
            bot.reply_to(m, 'منو اصلی:',reply_markup=markupstart)
        elif m.text == 'گروه های بوکناب👥':
            bot.reply_to(m, 'لطفا رشته خود را انتخاب کنید:',reply_markup=markupjoin) 
        elif m.text == 'روانشناسی':
          rank = bot.get_chat_member(rava,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('ravanshenasi',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'روانشناسی❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب روانشناسی شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب روانشناسی اول باید عضو کانال بوکناب(روانشناسی)بشی',reply_markup=markupch)
        elif m.text == 'ادبیات':
          rank = bot.get_chat_member(ada,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('adab',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'ادبیات❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب ادبیات شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب ادبیات اول باید عضو کانال بوکناب(ادبیات)بشی',reply_markup=markupch)
        elif m.text == 'علوم سیاسی':
          rank = bot.get_chat_member(ol,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('olo',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'علوم سیاسی❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب علوم سیاسی شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب علوم سیاسی اول باید عضو کانال بوکناب(علوم سیاسی)بشی',reply_markup=markupch)
        elif m.text == 'زبان':
          rank = bot.get_chat_member(zaban,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('zaban',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'زبان❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب زبان شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب زبان اول باید عضو کانال بوکناب(زبان)بشی',reply_markup=markupch)
        elif m.text == 'کشاورزی':
          rank = bot.get_chat_member(kesha,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('kesha',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'کشاورزی❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب کشاورزی شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب کشاورزی اول باید عضو کانال بوکناب(کشاورزی)بشی',reply_markup=markupch)
        elif m.text == 'معماری':
          rank = bot.get_chat_member(memari,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('memari',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'معماری❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب معماری شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
        elif m.text == 'هنر':
          rank = bot.get_chat_member(honar,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('honar',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'هنر❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب هنر شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب هنر اول باید عضو کانال بوکناب(هنر)بشی',reply_markup=markupch)
        elif m.text == 'عمران':
          rank = bot.get_chat_member(omran,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('omran',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'عمران❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب عمران شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب عمران اول باید عضو کانال بوکناب(عمران)بشی',reply_markup=markupch)
        elif m.text == 'متالوژی و مواد':
          rank = bot.get_chat_member(mavad,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('mavad',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'متالوژی❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب متالوژی و مواد شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب متالوژی و مواد اول باید عضو کانال بوکناب(متالوژی و مواد)بشی',reply_markup=markupch)
        elif m.text == 'مذهبی':
          rank = bot.get_chat_member(mazhabi,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('mazhabi',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'مذهبی❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب مذهبی شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب مذهبی اول باید عضو کانال بوکناب(مذهبی)بشی',reply_markup=markupch)
        elif m.text == 'آموزشی':
          rank = bot.get_chat_member(amozesh,m.from_user.id).status
          print rank
          if rank == "creator" or rank == "administrator" or rank == "member":
            redis.sadd('amozesh',m.from_user.id)
            redis.sadd('gps:{}'.format(m.from_user.id),'آموزشی❌')
            bot.reply_to(m, 'شما عضو گروه بوکناب آموزشی شدید\nزین پس هر مطلبی مرتبط با این گروه به شما ارسال میگردد')
          else:
            bot.reply_to(m, 'دوست من برای عضو شدن تو گروه بوکناب آموزشی اول باید عضو کانال بوکناب(آموزشی)بشی',reply_markup=markupch)
        elif m.text == 'پنل':
         if is_sudo(user_id=m.from_user.id):
            bot.reply_to(m, 'مدیریت ربات بوکناب',reply_markup=markupsend)
        elif m.text == 'ارسال به گروه روانشناسی':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_rava)
        elif m.text == 'ارسال به گروه ادبیات':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_ada)
        elif m.text == 'ارسال به گروه علوم سیاسی':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_ol)
        elif m.text == 'ارسال به گروه معماری':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_memari)
        elif m.text == 'ارسال به گروه هنر':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_honar)
        elif m.text == 'ارسال به گروه عمران':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_om)
        elif m.text == 'ارسال به گروه زبان':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_zaban)
        elif m.text == 'ارسال به گروه کشاورزی':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_kesha)
        elif m.text == 'ارسال به گروه متالوژی و مواد':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_mava)
        elif m.text == 'ارسال به گروه مذهبی':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_maz)
        elif m.text == 'ارسال به گروه آموزشی':
            bot.reply_to(m, 'پیامتو ارسال کن🌷')
            bot.register_next_step_handler(m, send_amo)
        elif m.text == 'اینستاگرام بوکناب📑':
            bot.reply_to(m, 'صفحات اینستاگرامی بوکناب📡',reply_markup=markupin)
        elif m.text == 'کتاب معماری':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_memari)
        elif m.text == 'کتاب ادبیات':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_ada)
        elif m.text == 'کتاب علوم سیاسی':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_ol)
        elif m.text == 'کتاب متالوژی و مواد':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_mavad)
        elif m.text == 'کتاب هنر':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_honar)
        elif m.text == 'کتاب آموزشی':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_amo)
        elif m.text == 'کتاب روانشناسی':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_rava)
        elif m.text == 'کتاب زبان':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_zaban)
        elif m.text == 'کتاب مذهبی':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_maz)
        elif m.text == 'کتاب عمران':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_omran)
        elif m.text == 'کتاب کشاورزی':
            bot.reply_to(m, ' لطفا فرم زیر را پرکرده و درهمین ربات ارسال کنید\n\nنام کتاب :\nنام نویسنده : \nشماره تماس خودتون : \nایدی تلگرامی خودتون : ',reply_markup=markupb)
            bot.register_next_step_handler(m, get_kesha)
        elif m.text == 'ارسال به همه اعضا':
            bot.reply_to(m, 'لطفا پیغامتو ارسال کن',reply_markup=markupp)
            bot.register_next_step_handler(m, toall)
        elif m.text == 'آمار':
            us = str(redis.scard('members'))
            bot.reply_to(m, 'آمار ربات: {}'.format(us))
        elif m.text == 'گروه های من🚩':
         card = redis.scard('gps:{}'.format(m.from_user.id))
         tit = redis.smembers('gps:{}'.format(m.from_user.id)) or ' '
         text = 'گروه هایی که شما در آنها عضو هستید📑:\n\n'
         markupcard = types.ReplyKeyboardMarkup(resize_keyboard=True)
         for name in tit:
           t = name
           text +='{}\n'.format(t)
           markupcard.add(types.KeyboardButton(name))
         markupcard.add(types.KeyboardButton('برگشت🔙'))
         bot.reply_to(m, text,reply_markup=markupcard)
         bot.register_next_step_handler(m, cards)
        elif m.text == 'کانال روانشناسی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_rava) 
        elif m.text == 'کانال معماری':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_mema) 
            bot.register_next_step_handler(m, ch_rava) 
        elif m.text == 'کانال ادبیات':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_ada) 
        elif m.text == 'کانال علوم سیاسی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_ol) 
        elif m.text == 'کانال هنر':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_honar) 
        elif m.text == 'کانال عمومی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_omo) 
        elif m.text == 'کانال عمران':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_omran) 
        elif m.text == 'کانال متالوژی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_mavad) 
        elif m.text == 'کانال مذهبی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_maz) 
        elif m.text == 'کانال آموزشی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_amo)
        elif m.text == 'کانال زبان':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_zaban)
        elif m.text == 'کانال کشاورزی':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به کانال\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, ch_kesha)
        elif m.text == 'ارسال به گروه ها':
            bot.reply_to(m, 'پیامتو ارسال کن تا بفرستم به گروه ها\n[Text](Link) = Hyper Link\n*bold*\n_italic_\n`code`\n\nاز این فرمت ها هم میتونی استفاده کنی',reply_markup=markupp)
            bot.register_next_step_handler(m, sgp)
        elif m.text == 'ارسال به کانال':
            bot.reply_to(m, 'به چه کانال میخای پیغام بدی',reply_markup=markupn)
        elif m.text == 'پشتیبانی📯':
            bot.reply_to(m, 'لطفا پیام خود را در قالب یک متن ارسال کنید',reply_markup=markupb)
            bot.register_next_step_handler(m, support)
     except:
         bot.reply_to(m, 'Error')
    
def toall(m):
    if not m.text == 'پنل':
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('members')
        for id in rd:
            try:
                bot.send_message(id, "{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('members', id)
          
def send_rava(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('ravanshenasi')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش روانشناسی\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('ravanshenasi', id)
                
def send_ada(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('adab')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش ادبیات\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('adab', id)
                
def send_ol(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('olo')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش علوم سیاسی\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('olo', id)
                
def send_memari(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('memari')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش معماری\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('memari', id)
                
def send_honar(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('honar')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش هنر\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('honar', id)
                
def send_om(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('omran')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش عمران\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('omran', id)
                
def send_mava(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('mavad')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش عمران\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('mavad', id)
                
def send_maz(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('mazhabi')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش مذهبی\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('mazhabi', id)
                
def send_amo(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('amozesh')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش آموزشی\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('amozesh', id)
                
def send_zaban(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('zaban')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش زبان\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('zaban', id)
 
def send_kesha(m):
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('kesha')
        for id in rd:
            try:
                bot.send_message(id, "اعضا محترم بخش کشاورزی\n\n{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('kesha', id)
    
def get_memari(m):
 #if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_معماری\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_ada(m):
 #if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_ادبیات\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_ol(m):
 #if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_علوم_سیاسی\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_mavad(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_متالوژی_و_مواد\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_omran(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_عمران\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_kesha(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_کشاورزی\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_honar(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_هنر\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_amo(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_آموزشی\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_rava(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_روانشناسی\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_zaban(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_زبان\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def get_maz(m):
# if m.text:
  if not m.text == 'برگشت🔙':
    bot.reply_to(m, 'درخواست کتاب شما با موفقیت ثبت شد🌷\nبزودی پاسخ میدهیم')
    bot.send_message(m.chat.id, 'چه دستوری میدهید؟',reply_markup=markupstart)
    bot.forward_message(chat_id=book, from_chat_id=m.chat.id, message_id=m.message_id)
    bot.send_message(book, '#سفارش_کتاب_مذهبی\nدرخواست کتاب از طرف:\n@{}\n{}'.format(m.from_user.username,m.from_user.id))
    
def cards(m):
      if m.text == 'روانشناسی❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'روانشناسی❌')
        redis.srem('ravanshenasi',m.from_user.id)
      if m.text == 'معماری❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'معماری❌')
        redis.srem('memari',m.from_user.id)
      if m.text == 'هنر❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'هنر❌')
        redis.srem('honar',m.from_user.id)
      if m.text == 'ادبیات❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'ادبیات❌')
        redis.srem('adab',m.from_user.id)
      if m.text == 'علوم سیاسی❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'علوم سیاسی❌')
        redis.srem('olo',m.from_user.id)
      if m.text == 'متالوژی❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'متالوژی❌')
        redis.srem('mavad',m.from_user.id)
      if m.text == 'آموزشی❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'آموزشی❌')
        redis.srem('amozesh',m.from_user.id)
      if m.text == 'مذهبی❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'مذهبی❌')
        redis.srem('mazhabi',m.from_user.id)
      if m.text == 'عمران❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'عمران❌')
        redis.srem('omran',m.from_user.id)
      if m.text == 'زبان❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'زبان❌')
        redis.srem('zaban',m.from_user.id)
      if m.text == 'کشاورزی❌':
        bot.reply_to(m, 'اگر عضو این گروه بودی که حالا دیگه نیستی😊\nاگر نبودی که 😐',reply_markup=markupjoin)
        redis.srem('gps:{}'.format(m.from_user.id),'کشاورزی❌')
        redis.srem('kesha',m.from_user.id)
     
def sendid(m):
    m.forward_from
    i = m.message_id
    bot.reply_to(m, i)

def ch_rava(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(rava, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(rava, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_ada(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(ada, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(ada, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
            
def ch_ol(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(ol, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(ol, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
            
def ch_mema(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(memari, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(memari, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_honar(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(honar, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(honar, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_omran(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(omran, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(omran, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_mavad(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(mavad, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(mavad, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_maz(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(mazhabi, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(mazhabi, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_amo(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(amozesh, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(amozesh, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def ch_zaban(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(zaban, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(zaban, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
            
def ch_kesha(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(kesha, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(kesha, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
           
def ch_omo(m):
  if not m.text == 'پنل':
   if m.text:
    bot.send_message(omo, m.text,parse_mode="Markdown")
    bot.reply_to(m, 'پیام به کانال ارسال شد')
   if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(omo, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
            
def sgp(m):
  if not m.text == 'پنل':
        text = m.text
        bot.reply_to(m, 'پیام شما ارسال شد\n\n{}'.format(text))
        rd = redis.smembers('groups')
        for id in rd:
            try:
                bot.send_message(id, "{}".format(text), parse_mode="Markdown")
            except:
                redis.srem('groups', id)
                
def sendall(m):
  if m.text:
    text = m.text
    bot.send_message(rava, text)
    bot.send_message(memari, text)
    bot.send_message(honar, text)
    bot.send_message(omran, text)
    bot.send_message(mavad, text)
    bot.send_message(mazhabi, text)
    bot.send_message(zaban, text)
    bot.send_message(amozesh, text)
    bot.send_message(kesha, text)
    bot.send_message(omo, text)
    bot.send_message(ada, text)
    bot.send_message(ol, text)
    bot.reply_to(m, 'به همه کانال ها ارسال شد')
  if m.photo:
          if m.photo:
            token = TOKEN
            fileid = m.photo[1].file_id
            path1 = bot.get_file(fileid)
            te = m.caption
            path = path1.file_path
            link = "https://api.telegram.org/file/bot{}/{}".format(token,path)
            urllib.urlretrieve(link, "test.png")
            file1 = open('test.png')
            bot.send_photo(rava, file1,caption=te)
           # bot.send_photo(memari, file1,caption=te)
            bot.send_photo(honar, file1,caption=te)
            bot.send_photo(omran, file1,caption=te)
            bot.send_photo(mavad, file1,caption=te)
            bot.send_photo(mazhabi, file1,caption=te)
            bot.send_photo(amozesh, file1,caption=te)
            bot.send_photo(zaban, file1,caption=te)
            bot.send_photo(kesha, file1,caption=te)
            bot.send_photo(omo, file1,caption=te)
            bot.send_photo(ada, file1,caption=te)
            bot.send_photo(ol, file1,caption=te)
            bot.reply_to(m, 'ارسال شد')
    
def support(m):
  if not m.text == 'برگشت🔙':
    text = '#📣پیامی_جدید'.format(m.from_user.username) + '\n\n📝 متن پیام : {}'.format(m.text) +'\n\n👤مشخصات_ارسال_کننده : \n🎭یوزرنیم : @{}\n🎭ایدی : {}\n📆تاریخ ارسال پیام : {} / {}'.format(m.from_user.username,m.from_user.id,time,date)
    bot.send_message(book, text)
    
#End By @Mrblack1
bot.polling(True)


